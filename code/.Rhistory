NHM_samples <- read.csv(file.choose())
View(NHM_samples)
Agraland_samples <- NHM_samples[grep("Agraland",NHM_samples$dynamicProperties),]
View(Agraland_samples)
Agraland_samples <- NHM_samples[grep("Europe",NHM_samples$continent),]
IPI_samples <- NHM_samples[grep("Insect Pollinator Initiative",NHM_samples$continent),]
View(IPI_samples)
IPI_samples <- NHM_samples[grep("project",NHM_samples$continent),]
IPI_samples <- NHM_samples[grep("Insect Pollinator Initiative",NHM_samples$continent),]
IPI_samples <- NHM_samples[grep("*Insect Pollinator Initiative*",NHM_samples$continent),]
IPI_samples <- NHM_samples[grep(*"Insect Pollinator Initiative"*,NHM_samples$continent),]
IPI_samples <- NHM_samples[grep('Insect Pollinator Initiative',NHM_samples$continent),]
IPI_samples <- NHM_samples[grep('Insect Pollinator Initiative',NHM_samples$dynamicProperties),]
IPI_samples <- NHM_samples[grep('Agraland',NHM_samples$dynamicProperties),]
IPI_samples <- NHM_samples[grep('Insect Pollinator Initiative',NHM_samples$dynamicProperties),]
Agriland_samples <- NHM_samples[grep('Agriland',NHM_samples$dynamicProperties),]
View(Agraland_samples)
# Read in NHM sample records
NHM_samples <- read.csv(file.choose())
# Isolate samples from the Insect Pollinator Initiative
IPI_samples <- NHM_samples[grep('Insect Pollinator Initiative',NHM_samples$dynamicProperties),]
# Isolate samples from the Agriland projects
Agriland_samples <- NHM_samples[grep('Agriland',NHM_samples$dynamicProperties),]
# Read in Senpathi et al. sampling sites
Senpathi_data <- read.csv(file.choose())
View(Agriland_samples)
colnames(Agriland_samples)
column_names <- colnames(Agriland_samples)
View(Agriland_samples$verbatimLatitude)
Agriland_samples$verbatimLatitude
View(Senpathi_data)
# Read in Senpathi et al. sampling sites
Senpathi_data <- read.csv(file.choose())
# Read in Senpathi et al. sampling sites
Senpathi_data <- read.csv(file.choose())
Agriland_samples$decimalLatitude
na.omit(Agriland_samples$decimalLatitude)
Agriland_samples$georeferenceProtocol
NHM_samples$decimalLatitude
NHM_samples["409"]
NHM_samples[,"409"]
NHM_samples["409";]
NHM_samples["409",]
View(NHM_samples["409",])
View(NHM_samples["409",]$year)
View(NHM_samples["409",]$dynamicProperties)
View(NHM_samples["409",]$georeferenceProtocol)
View(Agriland_samples$decimalLatitude)
head(Agriland_samples$decimalLatitude)
is.na(Agriland_samples$decimalLatitude)
na.omit(Agriland_samples$decimalLatitude)
##########################
### Set up environment ###
##########################
# Clear environment
rm(list=ls())
# Set working directory
library ("rstudioapi")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path ))
# Load packages
library("ggplot2")
#install.packages("tidyverse")
library("tidyverse")
library(tidyr)
library(RColorBrewer)
#install.packages("viridis")
library("viridis")
install.packages("readr")
library("readr")
#install.packages('rBLAST', repos = 'https://mhahsler.r-universe.dev')
library ("rBLAST")
install.packages("tidyverse")
# Load packages
library("ggplot2")
#install.packages("tidyverse")
library("tidyverse")
library(tidyr)
library(RColorBrewer)
#install.packages("viridis")
library("viridis")
#install.packages("readr")
library("readr")
#install.packages('rBLAST', repos = 'https://mhahsler.r-universe.dev')
library ("rBLAST")
#install.packages("dplyr")
library ("dplyr")
# Load in fasta file
V_bombi <- readDNAStringSet('/home/vlb19/Documents/Coding/2022_Vairimorpha_Genome/results_Vairimorpha_bombi_8.1-3/3.No_Ralstonia_Vairimorpha_bombi_8.1-3_assembly/3.No_Ralstonia_Vairimorpha_bombi_8.1-3.contigs.fasta')
# Store sequence names
seq_names <- names(V_bombi)
# Store sequences
sequences <- paste(V_bombi)
# Generate data frame
V_bombi_df <- data.frame(seq_names, sequences)
# Read in GC content results
GC_per_contig <- read_delim(
'/home/vlb19/Documents/Coding/2022_Vairimorpha_Genome/results_Vairimorpha_bombi_8.1-3/GC_content_per_tig.tsv',
show_col_types = FALSE,
col_names = FALSE)
View(GC_per_contig)
# Filter GC content by
GC_content_over_50 <- filter(GC_per_contig, X2 >= 50)
View(GC_content_over_50)
library("readr")
# Load the required libraries
library(ggplot2)
library("grid")
# !!! CONFIGURE YOUR PLOT HERE !!!
# Output
my_output <- paste("/home/vlb19/Documents/Coding/2021-2022_Microsporidia_Comparative_Genomics/BUSCO_analysis_pipeline/Results_V_bombi_8.1/ResultsSummary/","busco_figure.png",sep="/")
my_width <- 20
my_height <- 15
my_unit <- "cm"
# Colors
my_colors <- c("#56B4E9", "#3492C7", "#F0E442", "#F04442")
# Bar height ratio
my_bar_height <- 0.75
# Legend
my_title <- "BUSCO Assessment Results"
# Font
my_family <- "sans"
my_size_ratio <- 1
# !!! SEE YOUR DATA HERE !!!
# Your data as generated by python, remove or add more
my_species <- c('Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Mdaphniae', 'Mitosporidium daphniae', 'Mitosporidium daphniae', 'Mitosporidium daphniae', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Anncaliia algerae', 'Anncaliia algerae', 'Anncaliia algerae', 'Anncaliia algerae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Vairimorpha apis', 'Vairimorpha apis', 'Vairimorpha apis', 'Vairimorpha apis', 'Enterospora canceri', 'Enterospora canceri', 'Enterospora canceri', 'Enterospora canceri', 'Spraguea lophii', 'Spraguea lophii', 'Spraguea lophii', 'Spraguea lophii', 'Vittaforma corneae', 'Vittaforma corneae', 'Vittaforma corneae', 'Vittaforma corneae', 'Ordospora colligata', 'Ordospora colligata', 'Ordospora colligata', 'Ordospora colligata', 'EcuniculiEcunIII-L', 'EcuniculiEcunIII-L', 'EcuniculiEcunIII-L', 'EcuniculiEcunIII-L', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Nosema bombycis', 'Nosema bombycis', 'Nosema bombycis', 'Nosema bombycis', 'Vavraia culicis', 'Vavraia culicis', 'Vavraia culicis', 'Vavraia culicis', 'Edhazardia aedis', 'Edhazardia aedis', 'Edhazardia aedis', 'Edhazardia aedis', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Nematocida parisii', 'Nematocida parisii', 'Nematocida parisii', 'Nematocida parisii')
my_species <- factor(my_species)
my_species <- factor(my_species,levels(my_species)[c(length(levels(my_species)):1)]) # reorder your species here just by changing the values in the vector :
my_percentage <- c(50.2, 4.3, 1.5, 44.0, 32.3, 1.7, 3.0, 63.0, 64.8, 0.2, 2.7, 32.3, 52.2, 4.5, 1.5, 41.8, 99.2, 0.2, 0.2, 0.4, 45.2, 38.2, 3.2, 13.4, 32.7, 8.0, 8.8, 50.5, 98.3, 0.0, 1.2, 0.5, 54.8, 2.5, 8.8, 33.9, 52.3, 1.2, 1.5, 45.0, 90.8, 0.3, 4.0, 4.9, 73.8, 1.2, 3.7, 21.3, 98.3, 0.7, 0.0, 1.0, 99.3, 0.0, 0.3, 0.4, 84.5, 0.2, 2.5, 12.8, 46.3, 27.7, 6.3, 19.7, 95.3, 0.7, 1.8, 2.2, 90.0, 0.7, 4.8, 4.5, 99.7, 0.2, 0.2, -0.1, 83.2, 0.0, 5.0, 11.8, 96.3, 0.2, 1.5, 2.0)
my_values <- c(301, 26, 9, 264, 194, 10, 18, 378, 389, 1, 16, 194, 313, 27, 9, 251, 595, 1, 1, 3, 271, 229, 19, 81, 196, 48, 53, 303, 590, 0, 7, 3, 329, 15, 53, 203, 314, 7, 9, 270, 545, 2, 24, 29, 443, 7, 22, 128, 590, 4, 0, 6, 596, 0, 2, 2, 507, 1, 15, 77, 278, 166, 38, 118, 572, 4, 11, 13, 540, 4, 29, 27, 598, 1, 1, 0, 499, 0, 30, 71, 578, 1, 9, 12)
######################################
######################################
######################################
# Code to produce the graph
labsize = 1
if (length(levels(my_species)) > 10){
labsize = 0.66
}
print("Plotting the figure ...")
category <- c(rep(c("S","D","F","M"),c(1)))
category <-factor(category)
category = factor(category,levels(category)[c(4,1,2,3)])
df = data.frame(my_species,my_percentage,my_values,category)
figure <- ggplot() +
geom_bar(aes(y = my_percentage, x = my_species, fill = category), position = position_stack(reverse = TRUE), data = df, stat="identity", width=my_bar_height) +
coord_flip() +
theme_gray(base_size = 8) +
scale_y_continuous(labels = c("0","20","40","60","80","100"), breaks = c(0,20,40,60,80,100)) +
scale_fill_manual(values = my_colors,labels =c(" Complete (C) and single-copy (S)  ",
" Complete (C) and duplicated (D)",
" Fragmented (F)  ",
" Missing (M)")) +
ggtitle(my_title) +
xlab("") +
ylab("\n%BUSCOs") +
theme(plot.title = element_text(family=my_family, hjust=0.5, colour = "black", size = rel(2.2)*my_size_ratio, face = "bold")) +
theme(legend.position="top",legend.title = element_blank()) +
theme(legend.text = element_text(family=my_family, size = rel(1.2)*my_size_ratio)) +
theme(panel.background = element_rect(color="#FFFFFF", fill="white")) +
theme(panel.grid.minor = element_blank()) +
theme(panel.grid.major = element_blank()) +
theme(axis.text.y = element_text(family=my_family, colour = "black", size = rel(1.66)*my_size_ratio)) +
theme(axis.text.x = element_text(family=my_family, colour = "black", size = rel(1.66)*my_size_ratio)) +
theme(axis.line = element_line(size=1*my_size_ratio, colour = "black")) +
theme(axis.ticks.length = unit(.85, "cm")) +
theme(axis.ticks.y = element_line(colour="white", size = 0)) +
theme(axis.ticks.x = element_line(colour="#222222")) +
theme(axis.ticks.length = unit(0.4, "cm")) +
theme(axis.title.x = element_text(family=my_family, size=rel(1.2)*my_size_ratio)) +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
for(i in rev(c(1:length(levels(my_species))))){
detailed_values <- my_values[my_species==my_species[my_species==levels(my_species)[i]]]
total_buscos <- sum(detailed_values)
figure <- figure +
annotate("text", label=paste("C:", detailed_values[1] + detailed_values[2], " [S:", detailed_values[1], ", D:", detailed_values[2], "], F:", detailed_values[3], ", M:", detailed_values[4], ", n:", total_buscos, sep=""),
y=3, x = i, size = labsize*4*my_size_ratio, colour = "black", hjust=0, family=my_family)
}
ggsave(figure, file=my_output, width = my_width, height = my_height, unit = my_unit)
print("Done")
# !!! SEE YOUR DATA HERE !!!
# Your data as generated by python, remove or add more
my_species <- c('Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Mitosporidium daphniae', 'Mitosporidium daphniae', 'Mitosporidium daphniae', 'Mitosporidium daphniae', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Anncaliia algerae', 'Anncaliia algerae', 'Anncaliia algerae', 'Anncaliia algerae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Vairimorpha apis', 'Vairimorpha apis', 'Vairimorpha apis', 'Vairimorpha apis', 'Enterospora canceri', 'Enterospora canceri', 'Enterospora canceri', 'Enterospora canceri', 'Spraguea lophii', 'Spraguea lophii', 'Spraguea lophii', 'Spraguea lophii', 'Vittaforma corneae', 'Vittaforma corneae', 'Vittaforma corneae', 'Vittaforma corneae', 'Ordospora colligata', 'Ordospora colligata', 'Ordospora colligata', 'Ordospora colligata', 'EcuniculiEcunIII-L', 'EcuniculiEcunIII-L', 'EcuniculiEcunIII-L', 'EcuniculiEcunIII-L', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Nosema bombycis', 'Nosema bombycis', 'Nosema bombycis', 'Nosema bombycis', 'Vavraia culicis', 'Vavraia culicis', 'Vavraia culicis', 'Vavraia culicis', 'Edhazardia aedis', 'Edhazardia aedis', 'Edhazardia aedis', 'Edhazardia aedis', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Nematocida parisii', 'Nematocida parisii', 'Nematocida parisii', 'Nematocida parisii')
my_species <- factor(my_species)
my_species <- factor(my_species,levels(my_species)[c(length(levels(my_species)):1)]) # reorder your species here just by changing the values in the vector :
my_percentage <- c(50.2, 4.3, 1.5, 44.0, 32.3, 1.7, 3.0, 63.0, 64.8, 0.2, 2.7, 32.3, 52.2, 4.5, 1.5, 41.8, 99.2, 0.2, 0.2, 0.4, 45.2, 38.2, 3.2, 13.4, 32.7, 8.0, 8.8, 50.5, 98.3, 0.0, 1.2, 0.5, 54.8, 2.5, 8.8, 33.9, 52.3, 1.2, 1.5, 45.0, 90.8, 0.3, 4.0, 4.9, 73.8, 1.2, 3.7, 21.3, 98.3, 0.7, 0.0, 1.0, 99.3, 0.0, 0.3, 0.4, 84.5, 0.2, 2.5, 12.8, 46.3, 27.7, 6.3, 19.7, 95.3, 0.7, 1.8, 2.2, 90.0, 0.7, 4.8, 4.5, 99.7, 0.2, 0.2, -0.1, 83.2, 0.0, 5.0, 11.8, 96.3, 0.2, 1.5, 2.0)
my_values <- c(301, 26, 9, 264, 194, 10, 18, 378, 389, 1, 16, 194, 313, 27, 9, 251, 595, 1, 1, 3, 271, 229, 19, 81, 196, 48, 53, 303, 590, 0, 7, 3, 329, 15, 53, 203, 314, 7, 9, 270, 545, 2, 24, 29, 443, 7, 22, 128, 590, 4, 0, 6, 596, 0, 2, 2, 507, 1, 15, 77, 278, 166, 38, 118, 572, 4, 11, 13, 540, 4, 29, 27, 598, 1, 1, 0, 499, 0, 30, 71, 578, 1, 9, 12)
######################################
######################################
######################################
# Code to produce the graph
labsize = 1
if (length(levels(my_species)) > 10){
labsize = 0.66
}
print("Plotting the figure ...")
category <- c(rep(c("S","D","F","M"),c(1)))
category <-factor(category)
category = factor(category,levels(category)[c(4,1,2,3)])
df = data.frame(my_species,my_percentage,my_values,category)
figure <- ggplot() +
geom_bar(aes(y = my_percentage, x = my_species, fill = category), position = position_stack(reverse = TRUE), data = df, stat="identity", width=my_bar_height) +
coord_flip() +
theme_gray(base_size = 8) +
scale_y_continuous(labels = c("0","20","40","60","80","100"), breaks = c(0,20,40,60,80,100)) +
scale_fill_manual(values = my_colors,labels =c(" Complete (C) and single-copy (S)  ",
" Complete (C) and duplicated (D)",
" Fragmented (F)  ",
" Missing (M)")) +
ggtitle(my_title) +
xlab("") +
ylab("\n%BUSCOs") +
theme(plot.title = element_text(family=my_family, hjust=0.5, colour = "black", size = rel(2.2)*my_size_ratio, face = "bold")) +
theme(legend.position="top",legend.title = element_blank()) +
theme(legend.text = element_text(family=my_family, size = rel(1.2)*my_size_ratio)) +
theme(panel.background = element_rect(color="#FFFFFF", fill="white")) +
theme(panel.grid.minor = element_blank()) +
theme(panel.grid.major = element_blank()) +
theme(axis.text.y = element_text(family=my_family, colour = "black", size = rel(1.66)*my_size_ratio)) +
theme(axis.text.x = element_text(family=my_family, colour = "black", size = rel(1.66)*my_size_ratio)) +
theme(axis.line = element_line(size=1*my_size_ratio, colour = "black")) +
theme(axis.ticks.length = unit(.85, "cm")) +
theme(axis.ticks.y = element_line(colour="white", size = 0)) +
theme(axis.ticks.x = element_line(colour="#222222")) +
theme(axis.ticks.length = unit(0.4, "cm")) +
theme(axis.title.x = element_text(family=my_family, size=rel(1.2)*my_size_ratio)) +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
for(i in rev(c(1:length(levels(my_species))))){
detailed_values <- my_values[my_species==my_species[my_species==levels(my_species)[i]]]
total_buscos <- sum(detailed_values)
figure <- figure +
annotate("text", label=paste("C:", detailed_values[1] + detailed_values[2], " [S:", detailed_values[1], ", D:", detailed_values[2], "], F:", detailed_values[3], ", M:", detailed_values[4], ", n:", total_buscos, sep=""),
y=3, x = i, size = labsize*4*my_size_ratio, colour = "black", hjust=0, family=my_family)
}
ggsave(figure, file=my_output, width = my_width, height = my_height, unit = my_unit)
print("Done")
View(my_species)
my_species
levels(my_species)
tree_order <- c("Nematocida parisii", "Edhazardia aedis", "Anncaliia algerae" , "Trachipleistophora hominis", "Vavraia culicis", "Pseudoloma neurophilia", "Spraguea lophii", "Enterocytozoon hepatopenaei", "Enterospora canceri", "Enterocytozoon bieneusi", "Vittaforma corneae", "Encephalitozoon intestinalis", "Encephalitozoon romaleae", "Encephalitozoon hellem", "Encephalitozoon cuniculi", "Ordospora colligata", "Nosema bombycis", "Vairimorpha apis", "Vairimorpha ceranae", "Vairimorpha bombi")
summary(my_percentage)
length(my_percentage)
# Load the required libraries
library(ggplot2)
library("grid")
# !!! CONFIGURE YOUR PLOT HERE !!!
# Output
my_output <- paste("/home/vlb19/Documents/Coding/2021-2022_Microsporidia_Comparative_Genomics/BUSCO_analysis_pipeline/Results_V_bombi_8.1/ResultsSummary/","busco_figure.png",sep="/")
my_width <- 20
my_height <- 15
my_unit <- "cm"
# Colors
my_colors <- c("#56B4E9", "#3492C7", "#F0E442", "#F04442")
# Bar height ratio
my_bar_height <- 0.75
# Legend
my_title <- "BUSCO Assessment Results"
# Font
my_family <- "sans"
my_size_ratio <- 1
# !!! SEE YOUR DATA HERE !!!
# Your data as generated by python, remove or add more
my_species <- c('Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Anncaliia algerae', 'Anncaliia algerae', 'Anncaliia algerae', 'Anncaliia algerae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Vairimorpha apis', 'Vairimorpha apis', 'Vairimorpha apis', 'Vairimorpha apis', 'Enterospora canceri', 'Enterospora canceri', 'Enterospora canceri', 'Enterospora canceri', 'Spraguea lophii', 'Spraguea lophii', 'Spraguea lophii', 'Spraguea lophii', 'Vittaforma corneae', 'Vittaforma corneae', 'Vittaforma corneae', 'Vittaforma corneae', 'Ordospora colligata', 'Ordospora colligata', 'Ordospora colligata', 'Ordospora colligata', 'Encephalitozoon cuniculi', 'Encephalitozoon cuniculi', 'Encephalitozoon cuniculi', 'Encephalitozoon cuniculi', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Nosema bombycis', 'Nosema bombycis', 'Nosema bombycis', 'Nosema bombycis', 'Vavraia culicis', 'Vavraia culicis', 'Vavraia culicis', 'Vavraia culicis', 'Edhazardia aedis', 'Edhazardia aedis', 'Edhazardia aedis', 'Edhazardia aedis', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Nematocida parisii', 'Nematocida parisii', 'Nematocida parisii', 'Nematocida parisii')
my_species <- factor(my_species)
my_species <- factor(my_species,levels(my_species)[c(length(levels(my_species)):1)]) # reorder your species here just by changing the values in the vector :
my_percentage <- c(50.2, 4.3, 1.5, 44.0, 64.8, 0.2, 2.7, 32.3, 52.2, 4.5, 1.5, 41.8, 99.2, 0.2, 0.2, 0.4, 45.2, 38.2, 3.2, 13.4, 32.7, 8.0, 8.8, 50.5, 98.3, 0.0, 1.2, 0.5, 54.8, 2.5, 8.8, 33.9, 52.3, 1.2, 1.5, 45.0, 90.8, 0.3, 4.0, 4.9, 73.8, 1.2, 3.7, 21.3, 98.3, 0.7, 0.0, 1.0, 99.3, 0.0, 0.3, 0.4, 84.5, 0.2, 2.5, 12.8, 46.3, 27.7, 6.3, 19.7, 95.3, 0.7, 1.8, 2.2, 90.0, 0.7, 4.8, 4.5, 99.7, 0.2, 0.2, -0.1, 83.2, 0.0, 5.0, 11.8, 96.3, 0.2, 1.5, 2.0)
my_values <- c(301, 26, 9, 264, 389, 1, 16, 194, 313, 27, 9, 251, 595, 1, 1, 3, 271, 229, 19, 81, 196, 48, 53, 303, 590, 0, 7, 3, 329, 15, 53, 203, 314, 7, 9, 270, 545, 2, 24, 29, 443, 7, 22, 128, 590, 4, 0, 6, 596, 0, 2, 2, 507, 1, 15, 77, 278, 166, 38, 118, 572, 4, 11, 13, 540, 4, 29, 27, 598, 1, 1, 0, 499, 0, 30, 71, 578, 1, 9, 12)
######################################
######################################
######################################
# Code to produce the graph
labsize = 1
if (length(levels(my_species)) > 10){
labsize = 0.66
}
print("Plotting the figure ...")
category <- c(rep(c("S","D","F","M"),c(1)))
category <-factor(category)
category = factor(category,levels(category)[c(4,1,2,3)])
df = data.frame(my_species,my_percentage,my_values,category)
tree_order <- c("Nematocida parisii", "Edhazardia aedis", "Anncaliia algerae" , "Trachipleistophora hominis", "Vavraia culicis", "Pseudoloma neurophilia", "Spraguea lophii", "Enterocytozoon hepatopenaei", "Enterospora canceri", "Enterocytozoon bieneusi", "Vittaforma corneae", "Encephalitozoon intestinalis", "Encephalitozoon romaleae", "Encephalitozoon hellem", "Encephalitozoon cuniculi", "Ordospora colligata", "Nosema bombycis", "Vairimorpha apis", "Vairimorpha ceranae", "Vairimorpha bombi")
figure <- ggplot() +
reorder(Scientific.Name, Per..ident )
geom_bar(aes(y = my_percentage, x = reorder(my_species, tree_order), fill = category), position = position_stack(reverse = TRUE), data = df, stat="identity", width=my_bar_height) +
coord_flip() +
theme_gray(base_size = 8) +
scale_y_continuous(labels = c("0","20","40","60","80","100"), breaks = c(0,20,40,60,80,100)) +
scale_fill_manual(values = my_colors,labels =c(" Complete (C) and single-copy (S)  ",
" Complete (C) and duplicated (D)",
" Fragmented (F)  ",
" Missing (M)")) +
ggtitle(my_title) +
xlab("") +
ylab("\n%BUSCOs") +
theme(plot.title = element_text(family=my_family, hjust=0.5, colour = "black", size = rel(2.2)*my_size_ratio, face = "bold")) +
theme(legend.position="top",legend.title = element_blank()) +
theme(legend.text = element_text(family=my_family, size = rel(1.2)*my_size_ratio)) +
theme(panel.background = element_rect(color="#FFFFFF", fill="white")) +
theme(panel.grid.minor = element_blank()) +
theme(panel.grid.major = element_blank()) +
theme(axis.text.y = element_text(family=my_family, colour = "black", size = rel(1.66)*my_size_ratio)) +
theme(axis.text.x = element_text(family=my_family, colour = "black", size = rel(1.66)*my_size_ratio)) +
theme(axis.line = element_line(size=1*my_size_ratio, colour = "black")) +
theme(axis.ticks.length = unit(.85, "cm")) +
theme(axis.ticks.y = element_line(colour="white", size = 0)) +
theme(axis.ticks.x = element_line(colour="#222222")) +
theme(axis.ticks.length = unit(0.4, "cm")) +
theme(axis.title.x = element_text(family=my_family, size=rel(1.2)*my_size_ratio)) +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
figure <- ggplot() +
geom_bar(aes(y = my_percentage, x = reorder(my_species, tree_order), fill = category), position = position_stack(reverse = TRUE), data = df, stat="identity", width=my_bar_height) +
coord_flip() +
theme_gray(base_size = 8) +
scale_y_continuous(labels = c("0","20","40","60","80","100"), breaks = c(0,20,40,60,80,100)) +
scale_fill_manual(values = my_colors,labels =c(" Complete (C) and single-copy (S)  ",
" Complete (C) and duplicated (D)",
" Fragmented (F)  ",
" Missing (M)")) +
ggtitle(my_title) +
xlab("") +
ylab("\n%BUSCOs") +
theme(plot.title = element_text(family=my_family, hjust=0.5, colour = "black", size = rel(2.2)*my_size_ratio, face = "bold")) +
theme(legend.position="top",legend.title = element_blank()) +
theme(legend.text = element_text(family=my_family, size = rel(1.2)*my_size_ratio)) +
theme(panel.background = element_rect(color="#FFFFFF", fill="white")) +
theme(panel.grid.minor = element_blank()) +
theme(panel.grid.major = element_blank()) +
theme(axis.text.y = element_text(family=my_family, colour = "black", size = rel(1.66)*my_size_ratio)) +
theme(axis.text.x = element_text(family=my_family, colour = "black", size = rel(1.66)*my_size_ratio)) +
theme(axis.line = element_line(size=1*my_size_ratio, colour = "black")) +
theme(axis.ticks.length = unit(.85, "cm")) +
theme(axis.ticks.y = element_line(colour="white", size = 0)) +
theme(axis.ticks.x = element_line(colour="#222222")) +
theme(axis.ticks.length = unit(0.4, "cm")) +
theme(axis.title.x = element_text(family=my_family, size=rel(1.2)*my_size_ratio)) +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
for(i in rev(c(1:length(levels(my_species))))){
detailed_values <- my_values[my_species==my_species[my_species==levels(my_species)[i]]]
total_buscos <- sum(detailed_values)
figure <- figure +
annotate("text", label=paste("C:", detailed_values[1] + detailed_values[2], " [S:", detailed_values[1], ", D:", detailed_values[2], "], F:", detailed_values[3], ", M:", detailed_values[4], ", n:", total_buscos, sep=""),
y=3, x = i, size = labsize*4*my_size_ratio, colour = "black", hjust=0, family=my_family)
}
ggsave(figure, file=my_output, width = my_width, height = my_height, unit = my_unit)
print("Done")
# !!! SEE YOUR DATA HERE !!!
# Your data as generated by python, remove or add more
my_species <- c('Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Anncaliia algerae', 'Anncaliia algerae', 'Anncaliia algerae', 'Anncaliia algerae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Vairimorpha apis', 'Vairimorpha apis', 'Vairimorpha apis', 'Vairimorpha apis', 'Enterospora canceri', 'Enterospora canceri', 'Enterospora canceri', 'Enterospora canceri', 'Spraguea lophii', 'Spraguea lophii', 'Spraguea lophii', 'Spraguea lophii', 'Vittaforma corneae', 'Vittaforma corneae', 'Vittaforma corneae', 'Vittaforma corneae', 'Ordospora colligata', 'Ordospora colligata', 'Ordospora colligata', 'Ordospora colligata', 'Encephalitozoon cuniculi', 'Encephalitozoon cuniculi', 'Encephalitozoon cuniculi', 'Encephalitozoon cuniculi', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Nosema bombycis', 'Nosema bombycis', 'Nosema bombycis', 'Nosema bombycis', 'Vavraia culicis', 'Vavraia culicis', 'Vavraia culicis', 'Vavraia culicis', 'Edhazardia aedis', 'Edhazardia aedis', 'Edhazardia aedis', 'Edhazardia aedis', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Nematocida parisii', 'Nematocida parisii', 'Nematocida parisii', 'Nematocida parisii')
my_species <- factor(my_species)
my_species <- factor(my_species,levels(my_species)[c(length(levels(my_species)):1)]) # reorder your species here just by changing the values in the vector :
tree_order <- c("Nematocida parisii", "Edhazardia aedis", "Anncaliia algerae" , "Trachipleistophora hominis", "Vavraia culicis", "Pseudoloma neurophilia", "Spraguea lophii", "Enterocytozoon hepatopenaei", "Enterospora canceri", "Enterocytozoon bieneusi", "Vittaforma corneae", "Encephalitozoon intestinalis", "Encephalitozoon romaleae", "Encephalitozoon hellem", "Encephalitozoon cuniculi", "Ordospora colligata", "Nosema bombycis", "Vairimorpha apis", "Vairimorpha ceranae", "Vairimorpha bombi")
my_species <- factor(my_species,levels(my_species)[tree_order]) # reorder your species here just by changing the values in the vector :
my_percentage <- c(50.2, 4.3, 1.5, 44.0, 64.8, 0.2, 2.7, 32.3, 52.2, 4.5, 1.5, 41.8, 99.2, 0.2, 0.2, 0.4, 45.2, 38.2, 3.2, 13.4, 32.7, 8.0, 8.8, 50.5, 98.3, 0.0, 1.2, 0.5, 54.8, 2.5, 8.8, 33.9, 52.3, 1.2, 1.5, 45.0, 90.8, 0.3, 4.0, 4.9, 73.8, 1.2, 3.7, 21.3, 98.3, 0.7, 0.0, 1.0, 99.3, 0.0, 0.3, 0.4, 84.5, 0.2, 2.5, 12.8, 46.3, 27.7, 6.3, 19.7, 95.3, 0.7, 1.8, 2.2, 90.0, 0.7, 4.8, 4.5, 99.7, 0.2, 0.2, -0.1, 83.2, 0.0, 5.0, 11.8, 96.3, 0.2, 1.5, 2.0)
my_values <- c(301, 26, 9, 264, 389, 1, 16, 194, 313, 27, 9, 251, 595, 1, 1, 3, 271, 229, 19, 81, 196, 48, 53, 303, 590, 0, 7, 3, 329, 15, 53, 203, 314, 7, 9, 270, 545, 2, 24, 29, 443, 7, 22, 128, 590, 4, 0, 6, 596, 0, 2, 2, 507, 1, 15, 77, 278, 166, 38, 118, 572, 4, 11, 13, 540, 4, 29, 27, 598, 1, 1, 0, 499, 0, 30, 71, 578, 1, 9, 12)
######################################
######################################
######################################
# Code to produce the graph
labsize = 1
if (length(levels(my_species)) > 10){
labsize = 0.66
}
print("Plotting the figure ...")
category <- c(rep(c("S","D","F","M"),c(1)))
category <-factor(category)
category = factor(category,levels(category)[c(4,1,2,3)])
df = data.frame(my_species,my_percentage,my_values,category)
figure <- ggplot() +
geom_bar(aes(y = my_percentage, x = my_species, fill = category), position = position_stack(reverse = TRUE), data = df, stat="identity", width=my_bar_height) +
coord_flip() +
theme_gray(base_size = 8) +
scale_y_continuous(labels = c("0","20","40","60","80","100"), breaks = c(0,20,40,60,80,100)) +
scale_fill_manual(values = my_colors,labels =c(" Complete (C) and single-copy (S)  ",
" Complete (C) and duplicated (D)",
" Fragmented (F)  ",
" Missing (M)")) +
ggtitle(my_title) +
xlab("") +
ylab("\n%BUSCOs") +
theme(plot.title = element_text(family=my_family, hjust=0.5, colour = "black", size = rel(2.2)*my_size_ratio, face = "bold")) +
theme(legend.position="top",legend.title = element_blank()) +
theme(legend.text = element_text(family=my_family, size = rel(1.2)*my_size_ratio)) +
theme(panel.background = element_rect(color="#FFFFFF", fill="white")) +
theme(panel.grid.minor = element_blank()) +
theme(panel.grid.major = element_blank()) +
theme(axis.text.y = element_text(family=my_family, colour = "black", size = rel(1.66)*my_size_ratio)) +
theme(axis.text.x = element_text(family=my_family, colour = "black", size = rel(1.66)*my_size_ratio)) +
theme(axis.line = element_line(size=1*my_size_ratio, colour = "black")) +
theme(axis.ticks.length = unit(.85, "cm")) +
theme(axis.ticks.y = element_line(colour="white", size = 0)) +
theme(axis.ticks.x = element_line(colour="#222222")) +
theme(axis.ticks.length = unit(0.4, "cm")) +
theme(axis.title.x = element_text(family=my_family, size=rel(1.2)*my_size_ratio)) +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
for(i in rev(c(1:length(levels(my_species))))){
detailed_values <- my_values[my_species==my_species[my_species==levels(my_species)[i]]]
total_buscos <- sum(detailed_values)
figure <- figure +
annotate("text", label=paste("C:", detailed_values[1] + detailed_values[2], " [S:", detailed_values[1], ", D:", detailed_values[2], "], F:", detailed_values[3], ", M:", detailed_values[4], ", n:", total_buscos, sep=""),
y=3, x = i, size = labsize*4*my_size_ratio, colour = "black", hjust=0, family=my_family)
}
ggsave(figure, file=my_output, width = my_width, height = my_height, unit = my_unit)
print("Done")
c(length(levels(my_species)):1)
length(levels(my_species)):1
my_species <- factor(my_species,levels(my_species)[c(length(levels(my_species)):1)]) # reorder your species here just by changing the values in the vector :
View(my_species)
# !!! SEE YOUR DATA HERE !!!
# Your data as generated by python, remove or add more
my_species <- c('Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Mitosporidium daphniae', 'Mitosporidium daphniae', 'Mitosporidium daphniae', 'Mitosporidium daphniae', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Anncaliia algerae', 'Anncaliia algerae', 'Anncaliia algerae', 'Anncaliia algerae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Vairimorpha apis', 'Vairimorpha apis', 'Vairimorpha apis', 'Vairimorpha apis', 'Enterospora canceri', 'Enterospora canceri', 'Enterospora canceri', 'Enterospora canceri', 'Spraguea lophii', 'Spraguea lophii', 'Spraguea lophii', 'Spraguea lophii', 'Vittaforma corneae', 'Vittaforma corneae', 'Vittaforma corneae', 'Vittaforma corneae', 'Ordospora colligata', 'Ordospora colligata', 'Ordospora colligata', 'Ordospora colligata', 'Encephalitozoon cuniculi', 'Encephalitozoon cuniculi', 'Encephalitozoon cuniculi', 'Encephalitozoon cuniculi', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Nosema bombycis', 'Nosema bombycis', 'Nosema bombycis', 'Nosema bombycis', 'Vavraia culicis', 'Vavraia culicis', 'Vavraia culicis', 'Vavraia culicis', 'Edhazardia aedis', 'Edhazardia aedis', 'Edhazardia aedis', 'Edhazardia aedis', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Nematocida parisii', 'Nematocida parisii', 'Nematocida parisii', 'Nematocida parisii')
my_species <- factor(my_species)
my_species <- factor(my_species,levels(my_species)[c(length(levels(my_species)):1)]) # reorder your species here just by changing the values in the vector :
head(my_species)
strrep("Nematocida parisii",4)
rep("Nematocida parisii", 4)
tree_order <- c(rep("Nematocida parisii", 4), rep("Edhazardia aedis", 4), rep("Anncaliia algerae", 4) , rep("Trachipleistophora hominis", 4), rep("Vavraia culicis", 4), rep("Pseudoloma neurophilia", 4), rep("Spraguea lophii", 4), rep("Enterocytozoon hepatopenaei", 4), rep("Enterospora canceri", 4), rep("Enterocytozoon bieneusi", 4), rep("Vittaforma corneae", 4), rep("Encephalitozoon intestinalis", 4), rep("Encephalitozoon romaleae", 4), rep("Encephalitozoon hellem", 4), rep("Encephalitozoon cuniculi", 4), rep("Ordospora colligata", 4), rep("Nosema bombycis", 4), rep("Vairimorpha apis", 4), rep("Vairimorpha ceranae", 4), rep("Vairimorpha bombi", 4))
my_species <- factor(tree_order) # reorder your species here just by changing the values in the vector :
# Load the required libraries
library(ggplot2)
library("grid")
# !!! CONFIGURE YOUR PLOT HERE !!!
# Output
my_output <- paste("/home/vlb19/Documents/Coding/2021-2022_Microsporidia_Comparative_Genomics/BUSCO_analysis_pipeline/Results_V_bombi_8.1/ResultsSummary/","busco_figure.png",sep="/")
my_width <- 20
my_height <- 15
my_unit <- "cm"
# Colors
my_colors <- c("#56B4E9", "#3492C7", "#F0E442", "#F04442")
# Bar height ratio
my_bar_height <- 0.75
# Legend
my_title <- "BUSCO Assessment Results"
# Font
my_family <- "sans"
my_size_ratio <- 1
# !!! SEE YOUR DATA HERE !!!
# Your data as generated by python, remove or add more
my_species <- c('Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Enterocytozoon bieneusi', 'Mitosporidium daphniae', 'Mitosporidium daphniae', 'Mitosporidium daphniae', 'Mitosporidium daphniae', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Pseudoloma neurophilia', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Enterocytozoon hepatopenaei', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Encephalitozoon intestinalis', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Vairimorpha bombi', 'Anncaliia algerae', 'Anncaliia algerae', 'Anncaliia algerae', 'Anncaliia algerae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Encephalitozoon romaleae', 'Vairimorpha apis', 'Vairimorpha apis', 'Vairimorpha apis', 'Vairimorpha apis', 'Enterospora canceri', 'Enterospora canceri', 'Enterospora canceri', 'Enterospora canceri', 'Spraguea lophii', 'Spraguea lophii', 'Spraguea lophii', 'Spraguea lophii', 'Vittaforma corneae', 'Vittaforma corneae', 'Vittaforma corneae', 'Vittaforma corneae', 'Ordospora colligata', 'Ordospora colligata', 'Ordospora colligata', 'Ordospora colligata', 'Encephalitozoon cuniculi', 'Encephalitozoon cuniculi', 'Encephalitozoon cuniculi', 'Encephalitozoon cuniculi', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Vairimorpha ceranae', 'Nosema bombycis', 'Nosema bombycis', 'Nosema bombycis', 'Nosema bombycis', 'Vavraia culicis', 'Vavraia culicis', 'Vavraia culicis', 'Vavraia culicis', 'Edhazardia aedis', 'Edhazardia aedis', 'Edhazardia aedis', 'Edhazardia aedis', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Encephalitozoon hellem', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Trachipleistophora hominis', 'Nematocida parisii', 'Nematocida parisii', 'Nematocida parisii', 'Nematocida parisii')
my_species <- factor(my_species)
tree_order <- c(rep("Nematocida parisii", 4), rep("Edhazardia aedis", 4), rep("Anncaliia algerae", 4) , rep("Trachipleistophora hominis", 4), rep("Vavraia culicis", 4), rep("Pseudoloma neurophilia", 4), rep("Spraguea lophii", 4), rep("Enterocytozoon hepatopenaei", 4), rep("Enterospora canceri", 4), rep("Enterocytozoon bieneusi", 4), rep("Vittaforma corneae", 4), rep("Encephalitozoon intestinalis", 4), rep("Encephalitozoon romaleae", 4), rep("Encephalitozoon hellem", 4), rep("Encephalitozoon cuniculi", 4), rep("Ordospora colligata", 4), rep("Nosema bombycis", 4), rep("Vairimorpha apis", 4), rep("Vairimorpha ceranae", 4), rep("Vairimorpha bombi", 4))
my_species <- factor(tree_order) # reorder your species here just by changing the values in the vector :
my_percentage <- c(50.2, 4.3, 1.5, 44.0, 64.8, 0.2, 2.7, 32.3, 52.2, 4.5, 1.5, 41.8, 99.2, 0.2, 0.2, 0.4, 45.2, 38.2, 3.2, 13.4, 32.7, 8.0, 8.8, 50.5, 98.3, 0.0, 1.2, 0.5, 54.8, 2.5, 8.8, 33.9, 52.3, 1.2, 1.5, 45.0, 90.8, 0.3, 4.0, 4.9, 73.8, 1.2, 3.7, 21.3, 98.3, 0.7, 0.0, 1.0, 99.3, 0.0, 0.3, 0.4, 84.5, 0.2, 2.5, 12.8, 46.3, 27.7, 6.3, 19.7, 95.3, 0.7, 1.8, 2.2, 90.0, 0.7, 4.8, 4.5, 99.7, 0.2, 0.2, -0.1, 83.2, 0.0, 5.0, 11.8, 96.3, 0.2, 1.5, 2.0)
my_values <- c(301, 26, 9, 264, 389, 1, 16, 194, 313, 27, 9, 251, 595, 1, 1, 3, 271, 229, 19, 81, 196, 48, 53, 303, 590, 0, 7, 3, 329, 15, 53, 203, 314, 7, 9, 270, 545, 2, 24, 29, 443, 7, 22, 128, 590, 4, 0, 6, 596, 0, 2, 2, 507, 1, 15, 77, 278, 166, 38, 118, 572, 4, 11, 13, 540, 4, 29, 27, 598, 1, 1, 0, 499, 0, 30, 71, 578, 1, 9, 12)
######################################
######################################
######################################
# Code to produce the graph
labsize = 1
if (length(levels(my_species)) > 10){
labsize = 0.66
}
print("Plotting the figure ...")
category <- c(rep(c("S","D","F","M"),c(1)))
category <-factor(category)
category = factor(category,levels(category)[c(4,1,2,3)])
df = data.frame(my_species,my_percentage,my_values,category)
tree_order <- c(rep("Nematocida parisii", 4), rep("Edhazardia aedis", 4), rep("Anncaliia algerae", 4) , rep("Trachipleistophora hominis", 4), rep("Vavraia culicis", 4), rep("Pseudoloma neurophilia", 4), rep("Spraguea lophii", 4), rep("Enterocytozoon hepatopenaei", 4), rep("Enterospora canceri", 4), rep("Enterocytozoon bieneusi", 4), rep("Vittaforma corneae", 4), rep("Encephalitozoon intestinalis", 4), rep("Encephalitozoon romaleae", 4), rep("Encephalitozoon hellem", 4), rep("Encephalitozoon cuniculi", 4), rep("Ordospora colligata", 4), rep("Nosema bombycis", 4), rep("Vairimorpha apis", 4), rep("Vairimorpha ceranae", 4), rep("Vairimorpha bombi", 4))
figure <- ggplot() +
geom_bar(aes(y = my_percentage, x = my_species, fill = category), position = position_stack(reverse = TRUE), data = df, stat="identity", width=my_bar_height) +
coord_flip() +
theme_gray(base_size = 8) +
scale_y_continuous(labels = c("0","20","40","60","80","100"), breaks = c(0,20,40,60,80,100)) +
scale_fill_manual(values = my_colors,labels =c(" Complete (C) and single-copy (S)  ",
" Complete (C) and duplicated (D)",
" Fragmented (F)  ",
" Missing (M)")) +
ggtitle(my_title) +
xlab("") +
ylab("\n%BUSCOs") +
theme(plot.title = element_text(family=my_family, hjust=0.5, colour = "black", size = rel(2.2)*my_size_ratio, face = "bold")) +
theme(legend.position="top",legend.title = element_blank()) +
theme(legend.text = element_text(family=my_family, size = rel(1.2)*my_size_ratio)) +
theme(panel.background = element_rect(color="#FFFFFF", fill="white")) +
theme(panel.grid.minor = element_blank()) +
theme(panel.grid.major = element_blank()) +
theme(axis.text.y = element_text(family=my_family, colour = "black", size = rel(1.66)*my_size_ratio)) +
theme(axis.text.x = element_text(family=my_family, colour = "black", size = rel(1.66)*my_size_ratio)) +
theme(axis.line = element_line(size=1*my_size_ratio, colour = "black")) +
theme(axis.ticks.length = unit(.85, "cm")) +
theme(axis.ticks.y = element_line(colour="white", size = 0)) +
theme(axis.ticks.x = element_line(colour="#222222")) +
theme(axis.ticks.length = unit(0.4, "cm")) +
theme(axis.title.x = element_text(family=my_family, size=rel(1.2)*my_size_ratio)) +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
for(i in rev(c(1:length(levels(my_species))))){
detailed_values <- my_values[my_species==my_species[my_species==levels(my_species)[i]]]
total_buscos <- sum(detailed_values)
figure <- figure +
annotate("text", label=paste("C:", detailed_values[1] + detailed_values[2], " [S:", detailed_values[1], ", D:", detailed_values[2], "], F:", detailed_values[3], ", M:", detailed_values[4], ", n:", total_buscos, sep=""),
y=3, x = i, size = labsize*4*my_size_ratio, colour = "black", hjust=0, family=my_family)
}
ggsave(figure, file=my_output, width = my_width, height = my_height, unit = my_unit)
print("Done")
